<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd    
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd    
                        http://www.springframework.org/schema/mvc    
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	
	<bean id="dataSourceTargetCRM" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${crm_driver}" />
		<property name="url" value="${crm_url}" />
		<property name="username" value="${crm_username}" />
		<property name="password" value="${crm_password}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${crm_initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${crm_maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${crm_maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${crm_minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${crm_maxWait}"></property>
		
		<!-- 保证连接正常 -->
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"></property>
		<property name="numTestsPerEvictionRun" value="${numTestsPerEvictionRun}"></property>
	   	<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"></property>
	</bean>
	
	<bean id="dataSourceCRM" class="com.p6spy.engine.spy.P6DataSource">
		<constructor-arg>
			<ref local="dataSourceTargetCRM" />
		</constructor-arg>
	</bean>
	
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactoryCRM" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSourceCRM" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:crmDBMapping/*.xml"></property>
	</bean>
	
	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.ldps.crm.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryCRM"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManagerCRM"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSourceCRM" />
	</bean>
	
	
	<!-- job config -->
	<bean name="syncCustomerJob" class="com.ldps.crm.job.SyncCustomerDataFromCRMJob" />

    <bean id="syncCustomerJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
       <property name="targetObject">
           <ref bean="syncCustomerJob" />
       </property>
       <property name="targetMethod">
           <value>syncData</value>
       </property>
    </bean>
    <!-- 配置触发器 -->
    <bean id="syncCustomerCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <!-- 这里不可以直接在属性jobDetail中引用syncCustomerJob，因为他要求的是一个jobDetail类型的对象，所以我们得通过syncCustomerJobDetailFactoryBean来转一下 -->
       <property name="jobDetail">
           <ref bean="syncCustomerJobDetail" />
       </property>
       <!-- 每天的6点到23点每隔10分钟触发 -->
       <property name="cronExpression">
           <value>0 0/10 06-23 * * ?</value>
       </property>
    </bean>
 <!-- 添加触发器 -->
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
      
       <property name="triggers">
           <list>
              <ref local="syncCustomerCronTrigger" />
           </list>
       </property>
    </bean>
</beans>  