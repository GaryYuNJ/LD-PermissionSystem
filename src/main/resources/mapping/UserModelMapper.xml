<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ldps.dao.UserModelMapper" >
<!-- 
  <cache 
  	eviction="LRU" 
  	flushInterval="36000000" 
  	size="1024" 
  	readOnly="true" >
  </cache>
  -->
  <resultMap id="BaseResultMap" type="com.ldps.model.UserModel" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="BIGINT" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="CREATE_DATE" property="createDate"  />
    <result column="CREATE_USER" property="createUser" jdbcType="BIGINT" />
  </resultMap>
  
  <resultMap id="BaseResultWithRoleMap" type="com.ldps.model.UserModel" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="ROLE_ID" property="roleId" jdbcType="BIGINT" />
    <result column="STATUS" property="status" jdbcType="CHAR" />
    <result column="CREATE_DATE" property="createDate"  />
    <result column="CREATE_USER" property="createUser" jdbcType="BIGINT" />
    <association property="userRole"  javaType="com.ldps.model.Role">
    	<id property="id" column="T_ID"/>
        <result property="name" column="T_NAME"/>
        <result property="roleType" column="T_ROLETYPE"/>
	</association>
  </resultMap>
  
   <resultMap id="resultOfInteger" type="java.lang.Integer">  
       <result column="totalCount" property="totalCount" jdbcType="INTEGER" />  
  </resultMap> 
  
  <sql id="Base_Column_List" >
    ID, NAME, PASSWORD, STATUS,ROLE_ID, CREATE_DATE, CREATE_USER
  </sql>
  
   <select id="selectByUnamePword" resultMap="BaseResultMap" >
    select 
    <include refid="Base_Column_List" />
    from BACKEND_USER
    where NAME = #{userName,jdbcType=VARCHAR} and PASSWORD = #{password,jdbcType=VARCHAR} and STATUS='Y'
  </select>
  
   <select id="selectByUname" resultMap="resultOfInteger" >
    select 
    count(1) AS totalCount
    from BACKEND_USER
    where NAME = #{name,jdbcType=VARCHAR}
  </select>
  
  <select id="selectUserWithCondition" resultMap="BaseResultWithRoleMap">
    select 
   	A.*,B.ID R_ID,B.NAME T_NAME,B.ROLE_TYPE T_ROLETYPE 
    from BACKEND_USER A LEFT JOIN ROLE B ON A.ROLE_ID=B.ID
	<if test="name != null"><bind name="nameLike" value="'%' + name + '%'" />where NAME like #{nameLike}</if>
    limit #{startRow,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
  </select>
  
  <select id="selectCountWithCondition" resultMap="resultOfInteger">
    select 
    count(1) AS totalCount
    from BACKEND_USER
    <if test="name != null"><bind name="nameLike" value="'%' + name + '%'" />where NAME like #{nameLike}</if>
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from BACKEND_USER
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from BACKEND_USER
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ldps.model.UserModel" >
    insert into BACKEND_USER (ID, NAME, PASSWORD, 
      STATUS,ROLE_ID, CREATE_DATE, CREATE_USER
      )
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{status,jdbcType=CHAR},#{roleId,jdbcType=BIGINT}, #{createDate}, #{createUser,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ldps.model.UserModel" >
    insert into BACKEND_USER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
       <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="createDate != null" >
        CREATE_DATE,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=CHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ldps.model.UserModel" >
    update BACKEND_USER
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=CHAR},
      </if>
       <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        CREATE_DATE = #{createDate},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=BIGINT},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ldps.model.UserModel" >
    update BACKEND_USER
    set NAME = #{name,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=CHAR},
      ROLE_ID = #{roleId,jdbcType=BIGINT},
      CREATE_DATE = #{createDate},
      CREATE_USER = #{createUser,jdbcType=BIGINT}
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <update id="UpdateRoleEmptyByRoleId" parameterType="java.lang.Long" >
    update BACKEND_USER
    set ROLE_ID = NULL
    where ROLE_ID = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>